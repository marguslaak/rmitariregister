version: '3.8'

services:
  db:
    image: postgres:15-alpine
    ports:
      - "5000:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=ariregister
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  redis:
    image: 'redis:latest'

  rest:
    image: postgrest/postgrest:latest
    ports:
      - "3500:3500"
    depends_on:
      - db
    environment:
      - PGRST_DB_URI=postgres://root:root@db:5432/ariregister
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=web_anon
      - PGRST_SERVER_PORT=3500

  celery:
    build: .
    image: rmit_backend
    entrypoint: ""
    command: celery -A ariregister worker --beat --loglevel=debug
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=True
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=ariregister
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - DATABASE_HOST=db
      - ALLOWED_HOSTS=0.0.0.0,localhost

  backend:
    build: .
    image: rmit_backend
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=True
      - DATABASE_ENGINE=django.db.backends.postgresql
      - DATABASE_NAME=ariregister
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - DATABASE_HOST=db
      - ALLOWED_HOSTS=0.0.0.0,localhost

  frontend:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://0.0.0.0:3500/
    image: rmit_frontend
    volumes:
      - ./frontend:/code
    ports:
      - "3000:3000"
    depends_on:
      - rest

volumes:
  postgres_data: